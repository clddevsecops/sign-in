name: Install Windows SDK and Run Signing Script

on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install Windows SDK
      run: choco install windows-sdk-10.1 -y

    - name: List Installed Files in Windows Kits
      run: dir "C:\Program Files (x86)\Windows Kits\10\bin\x64"

    - name: Search for signtool.exe in Windows Kits
      id: find-signtool
      run: |
        $signtoolPath = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits\10\bin\x64" -Filter "signtool.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
        if (-not $signtoolPath) {
          Write-Error "signtool.exe not found."
          exit 1
        }
        echo "::set-output name=signtool::$signtoolPath"

    - name: Verify signtool
      run: |
        if (Test-Path "${{ steps.find-signtool.outputs.signtool }}") {
          "${{ steps.find-signtool.outputs.signtool }}" /?
        } else {
          Write-Error "signtool.exe not found in the expected directory."
        }

    - name: Run Sign Scripts
      run: |
        cd $env:GITHUB_WORKSPACE\BuildScripts\CodeSigning
        .\Sign.bat "$env:GITHUB_WORKSPACE\DotNet\hit.exe" "${{ steps.find-signtool.outputs.signtool }}"
