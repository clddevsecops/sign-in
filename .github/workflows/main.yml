name: Install Windows SDK and Run Signing Script

on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Windows SDK Installer
      run: |
        Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/?linkid=2120843" -OutFile "winsdksetup.exe"

    - name: Install Windows SDK
      run: |
        Start-Process -FilePath "winsdksetup.exe" -ArgumentList "/quiet", "/features", "+", "/installPath", "C:\CustomSDKPath" -NoNewWindow -Wait

    - name: Verify Installation Directory
      run: |
        if (-Not (Test-Path "C:\CustomSDKPath")) {
          Write-Error "Installation directory not found."
          exit 1
        }

    - name: List Installed Files in CustomSDKPath
      run: dir "C:\CustomSDKPath"

    - name: Search for signtool.exe in CustomSDKPath and other locations
      id: find-signtool
      run: |
        $paths = @(
          "C:\CustomSDKPath",
          "C:\Program Files (x86)\Windows Kits\10\bin\x64",
          "C:\Program Files (x86)\Windows Kits\10\bin\x86",
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC",
          "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC"
        )
        $signtoolPath = $null
        foreach ($path in $paths) {
          $signtoolPath = Get-ChildItem -Path $path -Filter "signtool.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
          if ($signtoolPath) { break }
        }
        if (-not $signtoolPath) {
          Write-Error "signtool.exe not found."
          exit 1
        }
        echo "::set-output name=signtool::$signtoolPath"

    - name: Verify signtool
      run: |
        if (Test-Path "${{ steps.find-signtool.outputs.signtool }}") {
          "${{ steps.find-signtool.outputs.signtool }}" /?
        } else {
          Write-Error "signtool.exe not found in the expected directory."
        }

    - name: Run Sign Scripts
      run: |
        cd $env:GITHUB_WORKSPACE\BuildScripts\CodeSigning
        .\Sign.bat "$env:GITHUB_WORKSPACE\DotNet\hit.exe" "${{ steps.find-signtool.outputs.signtool }}"
