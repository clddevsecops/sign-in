name: Install Windows SDK and Run Signing Script

on: [push]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install Visual Studio Build Tools
      run: choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Component.Windows10SDK.19041 --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --includeRecommended --quiet --installPath C:\BuildTools" -y

    - name: List Installed Files in Visual Studio Build Tools
      run: dir "C:\BuildTools"

    - name: Search for signtool.exe
      id: find-signtool
      run: |
        $paths = @(
          "C:\BuildTools",
          "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC",
          "C:\Program Files (x86)\Windows Kits\10\bin\x64",
          "C:\Program Files (x86)\Windows Kits\10\bin\x86"
        )
        $signtoolPath = $null
        foreach ($path in $paths) {
          $signtoolPath = Get-ChildItem -Path $path -Filter "signtool.exe" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
          if ($signtoolPath) { break }
        }
        if (-not $signtoolPath) {
          Write-Error "signtool.exe not found."
          exit 1
        }
        echo "::set-output name=signtool::$signtoolPath"

    - name: Verify signtool
      run: |
        if (Test-Path "${{ steps.find-signtool.outputs.signtool }}") {
          "${{ steps.find-signtool.outputs.signtool }}" /?
        } else {
          Write-Error "signtool.exe not found in the expected directory."
        }

    - name: Run Sign Scripts
      run: |
        cd $env:GITHUB_WORKSPACE\BuildScripts\CodeSigning
        .\Sign.bat "$env:GITHUB_WORKSPACE\DotNet\hit.exe" "${{ steps.find-signtool.outputs.signtool }}"
